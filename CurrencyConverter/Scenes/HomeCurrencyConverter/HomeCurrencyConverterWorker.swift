//
//  HomeCurrencyConverterWorker.swift
//  CurrencyConverter
//
//  Created by Caio de Souza on 10/02/19.
//  Copyright (c) 2019 Caio de Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
import enum Alamofire.Result

// Typealias
typealias CurrencyConverterRestAPICompletionHandler = (Result<CurrencyRevolutApiResponse>) -> Void
typealias CurrencyConverterServiceSuccessHandler = (CurrencyRevolutApiResponse) -> Void
typealias CurrencyConverterServiceFailureHandler = (Error) -> Void


// Service Protocol
protocol HomeCurrencyConverterService{
    func doFetchCurrencies(base: String, completionHandler: @escaping CurrencyConverterRestAPICompletionHandler)
    
}


class HomeCurrencyConverterWorker{
    
    var service: HomeCurrencyConverterService!
    
    init(service: HomeCurrencyConverterService) {
        self.service = service
    }
    
    func doFetchCurrencies(base: String, successHandler: @escaping CurrencyConverterServiceSuccessHandler,
                           failureHandler: @escaping CurrencyConverterServiceFailureHandler){
        service.doFetchCurrencies(base: base) { (result) in
            switch result{
                case .success(let value):
                    successHandler(value)
                case .failure(let error):
                    failureHandler(error)
            }
        }
    }
}
